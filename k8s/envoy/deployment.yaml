apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  namespace: agricultural-vision
  labels:
    app: envoy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.33-latest
          command: ["/usr/local/bin/envoy"]
          args:
            - "-c"
            - "/etc/envoy/envoy.yaml"
            - "--log-level"
            - "info"
          ports:
            - name: http
              containerPort: 10000
              protocol: TCP
            - name: admin
              containerPort: 9901
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /ready
              port: 9901
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 9901
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
              readOnly: true
      volumes:
        - name: envoy-config
          configMap:
            name: envoy-config

---
# envoy-service-nodeport.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy-service
  namespace: agricultural-vision
  labels:
    app: envoy
spec:
  type: NodePort
  selector:
    app: envoy
  ports:
    - name: http
      port: 80
      targetPort: 10000
      nodePort: 30080  # 指定端口，范围：30000-32767
      protocol: TCP
    - name: admin
      port: 9901
      targetPort: 9901
      nodePort: 30901
      protocol: TCP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: agricultural-vision
data:
  envoy.yaml: |
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901

    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    codec_type: AUTO
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: agricultural_vision_service
                                timeout: 300s
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    # 使用默认访问日志格式
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog

      clusters:
        - name: agricultural_vision_service
          type: STRICT_DNS
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: agricultural_vision_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: agricultural-vision-service
                          port_value: 8080
          health_checks:
            - timeout: 3s
              interval: 5s
              unhealthy_threshold: 2
              healthy_threshold: 2
              tcp_health_check: {}