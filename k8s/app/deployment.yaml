apiVersion: apps/v1
kind: Deployment
metadata:
  name: agricultural-vision
  namespace: agricultural-vision
  labels:
    app: agricultural-vision
spec:
  replicas: 5
  selector:
    matchLabels:
      app: agricultural-vision
  template:
    metadata:
      labels:
        app: agricultural-vision
    spec:
      initContainers:
        # 保留原有的 MySQL 和 Redis 等待容器
        - name: wait-for-mysql
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z mysql-service 3306; do
                echo "Waiting for MySQL..."
                sleep 2
              done
              echo "MySQL is ready!"
        - name: wait-for-redis
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z redis-service 6379; do
                echo "Waiting for Redis..."
                sleep 2
              done
              echo "Redis is ready!"
#        - name: wait-for-kafka
#          image: busybox:1.36
#          command:
#            - sh
#            - -c
#            - |
#              until nc -z kafka-client.agricultural-vision.svc.cluster.local 9092; do
#                echo "Waiting for Kafka..."
#                sleep 2
#              done
#              echo "Kafka is ready!"
      containers:
        - name: agricultural-vision
          image: agricultural-vision:latest  # 替换为实际镜像
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          env:
            # 新增：时区配置（覆盖容器默认时区）
            - name: TZ
              value: Asia/Shanghai
            # 保留原有环境变量
            - name: GIN_MODE
              value: "release"
            - name: INSTANCE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: mysql-password
            - name: AI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: ai-api-key
            - name: OSS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: oss-access-key-id
            - name: OSS_ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: oss-access-key-secret
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/conf
              readOnly: true
          # 确保应用使用正确的配置加载逻辑
          command: ["./agricultural_vision"]  # 新增启动参数（可选）
      volumes:
        - name: config
          configMap:
            name: agricultural-vision-config

---
apiVersion: v1
kind: Service
metadata:
  name: agricultural-vision-service
  namespace: agricultural-vision
spec:
  selector:
    app: agricultural-vision
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
#      nodePort: 30080  # 指定NodePort端口，可选（不指定则自动分配）
  type: ClusterIP  # 修改类型为NodePort

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agricultural-vision-hpa
  namespace: agricultural-vision
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agricultural-vision
  minReplicas: 1
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agricultural-vision-pdb
  namespace: agricultural-vision
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: agricultural-vision

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: agricultural-vision-network-policy
  namespace: agricultural-vision
spec:
  podSelector:
    matchLabels:
      app: agricultural-vision
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              # 允许Ingress Controller的Pod访问（根据实际标签修改）
              app.kubernetes.io/name: nginx-ingress-controller  # 示例为NGINX Ingress
        - podSelector:
            matchLabels:
              app: mysql  # 保留原有依赖
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 8080
  # egress部分保持不变
  egress:
    # 新增：允许访问 Kafka 服务的 9092 端口
    - to:
        - podSelector:
            matchLabels:
              app: kafka  # 匹配 Kafka 服务的标签
      ports:
        - protocol: TCP
          port: 9092
    - to:
        - podSelector:
            matchLabels:
              app: mysql
      ports:
        - protocol: TCP
          port: 3306
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53